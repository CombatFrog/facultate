bits 32 ; assembling for the 32 bits architecture

; declare the EntryPoint (a label defining the very first instruction of the program)
global start        

; declare external functions needed by our program
extern exit               ; tell nasm that exit exists even if we won't be defining it
import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
                          ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
extern printf
import printf msvcrt.dll
extern Concatenare
                          
; our data is declared here (the variables needed by our program)
segment data use32 class=data
    ; ...
    s1 db 'abcd'
    s2 db 'mnop'
    len1 equ $-s1
    len2 equ $-s2
    s3 times len1+len2+1 db 0
    format db '%s', 0
; our code starts here
segment code use32 class=code
    start:
        ; ...
        push s1
        push len1
        push s2
        push len2
        push s3
        call Concatenare
        add esp, 4*5
        
        ;afisare s3
        push dword s3
        push dword format
        call [printf]
        add esp, 4*2
        
        ; exit(0)
        push    dword 0      ; push the parameter for exit onto the stack
        call    [exit]       ; call exit to terminate the program
